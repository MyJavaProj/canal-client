<?xml version="1.0" encoding="UTF-8"?>
<!--日志级别以及优先级排序: OFF > FATAL > ERROR > WARN > INFO > DEBUG > TRACE > ALL -->
<!--Configuration后面的status，这个用于设置log4j2自身内部的信息输出，可以不设置，当设置成trace时，你会看到log4j2内部各种详细输出-->
<!--monitorInterval：Log4j能够自动检测修改配置 文件和重新配置本身，设置间隔秒数-->
<configuration status="INFO" monitorInterval="60">
    <properties>
        <!--${sys:catalina.home}表示linux中环境变量中的tomcat根目录 -->
        <Property name="log_path">logs/</Property>
        
    </properties>
    <!--先定义所有的appender-->
    <appenders>
    <!--这个输出控制台的配置-->
        <console name="Console" target="SYSTEM_OUT">
            <!--输出日志的格式-->
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}|%p|%m%n"/>
        </console>
        <!--文件会打印出所有信息，这个log每次运行程序会自动清空，由append属性决定，这个也挺有用的，适合临时测试用-->
        <File name="log" fileName="log.log" append="false">
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}|%p|%m%n"/>
        </File>
        <RollingFile name="RollingFileDebug" fileName="${log_path}/canal-Client-log.log" filePattern="${log_path}/debug.log.%d{yyyy-MM-dd}">  
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}|%p|%m%n"/>  
            <Policies>  
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>  
            </Policies>  
        </RollingFile>
        <RollingFile name="RollingFileInfo" fileName="${log_path}/canal-Client-utilization.log" filePattern="${log_path}/ykt-open.log.%d{yyyy-MM-dd}">  
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}|%p|%m%n"/>  
            <Policies>  
                <TimeBasedTriggeringPolicy modulate="true" interval="1"/>  
            </Policies>  
        </RollingFile>
        <!-- <RollingFile name="RollingFileTimeout" fileName="${log_path}/ykt-timeout.log" filePattern="${log_path}/ykt-timeout-%d{yyyy-MM-dd}-%i.log.gz">  
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}|%p|%m%n"/>  
            <SizeBasedTriggeringPolicy size="30 MB" />
            <DefaultRolloverStrategy max="20"/>
        </RollingFile>
        <RollingFile name="RollingFileWarn" fileName="${log_path}/ykt-warn.log" filePattern="${log_path}/ykt-warn-%d{yyyy-MM-dd}-%i.log.gz">  
            <PatternLayout pattern="%d{yyyy-MM-dd HH:mm:ss,SSS}|%p|%m%n"/>  
            <SizeBasedTriggeringPolicy size="30 MB" />
            <DefaultRolloverStrategy max="10"/>
        </RollingFile> -->
    </appenders>
    <!--然后定义logger，只有定义了logger并引入的appender，appender才会生效-->
    <loggers>
        <!-- <AsyncLogger name="com.fxrh.ykt" level="debug" additivity="false" includeLocation="true">
             <AppenderRef ref="RollingFileDebug" />
        </AsyncLogger> -->
        <Logger name="com.fxrh.ykt" level="debug" additivity="false">
             <AppenderRef ref="RollingFileDebug" />
        </Logger>
        <Logger name="com.fxrh.config.LoggerUtilization" level="info" additivity="false">
             <AppenderRef ref="RollingFileInfo" />
        </Logger>
        <!-- <Logger name="com.fxrh.ykt.info.log.LoggerTimeout" level="info" additivity="false">
             <AppenderRef ref="RollingFileTimeout" />
        </Logger>
        <Logger name="com.fxrh.ykt.info.log.LoggerWarn" level="info" additivity="false">
             <AppenderRef ref="RollingFileWarn" />
        </Logger> -->
        <!--过滤掉spring和mybatis的一些无用的DEBUG信息-->
        <root level="INFO">
            <appender-ref ref="Console"/>
            <appender-ref ref="log" />
        </root>
    </loggers>
</configuration>